Select 
o.EAN, 
o.[External Document No_], 
o.Item_Beschreibung_1,
o.Item_Beschreibung_2, 
o.Kategorie_kurz, 
o.Kategorie_lang, 
o.Kreditor, 
o.Kreditorname, 
o.Kundengruppe, 
o.LagerortspezifischerEinstandspreis,
o.Marke, 
o.OrderDate, 
case when o.[Shop Code] = 'WINDELN_CH' then o.OrderIntakeIncVAT / p.[Exchange Rate Amount] else o.OrderIntakeIncVAT end as OrderIntakeIncVAT, 
o.OrderIntakeIncVAT as OrderIntakeIncVATInlokalerWaehrung,
o.OrderQuantity, 
o.SellToAccountNo, 
o.[Shop Code],
auftragsstatus.AuftragsstatusGesamt, 
erst.AnzahlBestellungen as AnzahlBestellungenKundeGesamt, 
erst.DatumErstbestellung,
erst.DatumLetzteBestellung,
p.[Exchange Rate Amount]

from BI_Data.item.OrderIntakeNachStornierungen as o 

left outer join
(
select
esh.[External Document No_] as ExterneBelegnummer, 
case when (ROW_NUMBER() OVER(PARTITION BY [Sell-to Account No_]  ORDER BY esh.[Order Date])) = 1 then 'Neubestellung' else 'Wiederkauf' end as AuftragsstatusGesamt
from Urban_NAV600_SL.dbo.[Urban-Brand GmbH$eBayNavCSalesHeader] as esh with (nolock)
group by 
esh.[External Document No_], 
[Sell-to Account No_],
esh.[Order Date]
) as auftragsstatus 
	on o.[External Document No_] = auftragsstatus.ExterneBelegnummer
	
left outer join 
(
select
cast(min(esh.[Order Date]) as date) as DatumErstbestellung,
CAST(max(esh.[Order Date]) as date) as DatumLetzteBestellung,
COUNT(distinct esh.[External Document No_]) as AnzahlBestellungen,
esh.[Sell-to Account No_]
from Urban_NAV600_SL.dbo.[Urban-Brand GmbH$eBayNavCSalesHeader] as esh with (nolock)
Group By 
esh.[Sell-to Account No_]
) as erst
	on o.SellToAccountNo = erst.[Sell-to Account No_]
	
cross apply
   (select top(1) c.[Exchange Rate Amount]
    from Urban_NAV600_SL.dbo.[Urban-Brand GmbH$Currency Exchange Rate] as c
    where c.[Currency Code] = 'CHF'and  c.[Starting Date] <= o.OrderDate ORDER BY c.[Starting Date] DESC) p
